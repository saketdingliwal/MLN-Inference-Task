### Cartesian-product pointer analysis
# 
# Author: John Whaley

.basedir "pa.joeq"

### Domains

.include "fielddomains.pa"

.bddvarorder N0_F0_I0_M1_M0_V1xV0_T0_Z0_T1_H5xH9_H4xH8_H3xH7_H2xH6_H0_H1

### Relations

vP0 (v:V0, h:H0) input
vP (vc0:H2, vc1:H3, vc2:H4, vc3:H5, v:V0, h:H0) output
hP (ha:H0, field:F0, hb:H1) output
S (base:V0, field:F0, src:V1) input
L (base:V0, field:F0, dest:V1) input
vT (var:V0, type:T0) input
hT (heap:H0, type:T1) input
aT (type:T0, type:T1) input
vPfilter (v:V0, h:H0)
cha (type:T1, name:N0, method:M0) input
actual (invoke:I0, num:Z0, actualparam:V1) input
formal (method:M0, num:Z0, formalparam:V0) input
Mret (method:M0, v:V1) input
Mthr (method:M0, v:V1) input
Iret (invoke:I0, v:V0) input
Ithr (invoke:I0, v:V0) input
mI (method:M0, invoke:I0, name:N0) input
IE0 (invoke:I0, target:M0) input
IE (invoke:I0, target:M0, ic0:H2, ic1:H3, ic2:H4, ic3:H5, mc0:H6, mc1:H7, mc2:H8, mc3:H9) output

### Rules

vP(_,_,_,_,v,h) :- vP0(v,h).
vPfilter(v,h) :- vT(v,tv), aT(tv,th), hT(h,th).

# Stores.
hP(h1,f,h2) :- S(v1,f,v2), vP(c0,c1,c2,c3,v1,h1), vP(c0,c1,c2,c3,v2,h2).

# Loads.
vP(c0,c1,c2,c3,v2,h2) :- L(v1,f,v2), vP(c0,c1,c2,c3,v1,h1), hP(h1,f,h2), vPfilter(v2,h2). split

# Statically-bound calls.
IE(i,m,a0,a1,a2,a3,b0,b1,b2,b3) :- mI(_,i,0), IE0(i,m), \
                     actual(i,0,v0), vP(a0,a1,a2,a3,v0,b0), \
                     actual(i,1,v1), vP(a0,a1,a2,a3,v1,b1), \
                     actual(i,2,v2), vP(a0,a1,a2,a3,v2,b2), \
                     actual(i,3,v3), vP(a0,a1,a2,a3,v3,b3). split

# Virtual calls.
IE(i,m,a0,a1,a2,a3,b0,b1,b2,b3) :- mI(_,i,n), \
                     actual(i,0,v0), vP(a0,a1,a2,a3,v0,b0), hT(b0,t), cha(t,n,m), \
                     actual(i,1,v1), vP(a0,a1,a2,a3,v1,b1), \
                     actual(i,2,v2), vP(a0,a1,a2,a3,v2,b2), \
                     actual(i,3,v3), vP(a0,a1,a2,a3,v3,b3). split

# Return values and exceptions.
vP(a0,a1,a2,a3,v,h) :- IE(i,m,a0,a1,a2,a3,b0,b1,b2,b3), \
                       Iret(i,v), Mret(m,v1), vP(b0,b1,b2,b3,v1,h). split
vP(a0,a1,a2,a3,v,h) :- IE(i,m,a0,a1,a2,a3,b0,b1,b2,b3), \
                       Ithr(i,v), Mthr(m,v1), vP(b0,b1,b2,b3,v1,h). split

# Parameters up to 4.
vP(b0,b1,b2,b3,v,a0) :- IE(_,m,a0,_,_,_,b0,b1,b2,b3), formal(m,0,v).
vP(b0,b1,b2,b3,v,a1) :- IE(_,m,_,a1,_,_,b0,b1,b2,b3), formal(m,1,v).
vP(b0,b1,b2,b3,v,a2) :- IE(_,m,_,_,a2,_,b0,b1,b2,b3), formal(m,2,v).
vP(b0,b1,b2,b3,v,a3) :- IE(_,m,_,_,_,a3,b0,b1,b2,b3), formal(m,3,v).

# Parameters beyond 4.
vP(b0,b1,b2,b3,v,h) :- formal(m,z,v), z > 3, IE(i,m,a0,a1,a2,a3,b0,b1,b2,b3), \
                       actual(i,z,v1), vP(a0,a1,a2,a3,v1,h). split
